"use client";
import { createContext, useState, FC, useContext, ReactNode } from "react";
import { Inter } from "next/font/google";
import Head from "next/head";
import "./globals.css";

const inter = Inter({ subsets: ["latin"] });

type ThemeName = "rainforest" | "candy" | "base" | "default";

// Create a new React Context for Theme
const ThemeContext = createContext({
  theme: "base",
  setTheme: (theme: ThemeName) => {},
});

const useTheme = () => useContext(ThemeContext);

const RootLayout: FC<{ children?: ReactNode }> = ({ children }) => {
  const [theme, setTheme] = useState<ThemeName>("base");

  const handleTheme = () => {
    const themes: Record<ThemeName, ThemeName> = {
      rainforest: "base",
      candy: "rainforest",
      base: "candy",
      default: "base",
    };
    setTheme((prevTheme: ThemeName) => themes[prevTheme] || themes["default"]);
  };

  // Provide the theme and setTheme function to all children
  return (
    <ThemeContext.Provider value={{ theme, setTheme: handleTheme }}>
      <html lang="en" data-theme={theme}>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
        </Head>
        <body className={inter.className}>{children}</body>
      </html>
    </ThemeContext.Provider>
  );
};

export default RootLayout;
export { ThemeContext, useTheme };
